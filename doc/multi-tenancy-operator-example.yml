apiVersion: apps/v1
kind: Deployment
metadata:
  name: multi-tenancy-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      name: multi-tenancy-operator
  template:
    metadata:
      labels:
        name: multi-tenancy-operator
    spec:
      serviceAccountName: multi-tenancy-operator
      containers:
        - name: multi-tenancy-operator
          # Replace this with the built image name
          image: ica10888/multi-tenancy-operator:v1.0.0
          command:
          - multi-tenancy-operator
          imagePullPolicy: IfNotPresent
          env:
            - name: CHART_HOME
              value: "/root/chart"
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "multi-tenancy-operator"
          resources:
            limits:
              cpu: 1000m
              memory: 600Mi
            requests:
              cpu: 50m
              memory: 500Mi
          volumeMounts:
          - mountPath: /root/chart/deployment-example/.helmignore
            name: deployment-example
            subPath: ignore
          - mountPath: /root/chart/deployment-example/Chart.yaml
            name: deployment-example
            subPath: chart
          - mountPath: /root/chart/deployment-example/values.yaml
            name: deployment-example
            subPath: values
          - mountPath: /root/chart/deployment-example/templates/_helpers.tpl
            name: deployment-example-templates
            subPath: helpers
          - mountPath: /root/chart/deployment-example/templates/deployment.yaml
            name: deployment-example-templates
            subPath: deployment
          - mountPath: /root/chart/deployment-example/templates/NOTES.txt
            name: deployment-example-templates
            subPath: notes
          - mountPath: /root/chart/statefulset-example/.helmignore
            name: statefulset-example
            subPath: ignore
          - mountPath: /root/chart/statefulset-example/Chart.yaml
            name: statefulset-example
            subPath: chart
          - mountPath: /root/chart/statefulset-example/values.yaml
            name: statefulset-example
            subPath: values
          - mountPath: /root/chart/statefulset-example/templates/_helpers.tpl
            name: statefulset-example-templates
            subPath: helpers
          - mountPath: /root/chart/statefulset-example/templates/statefulset.yaml
            name: statefulset-example-templates
            subPath: statefulset
          - mountPath: /root/chart/statefulset-example/templates/service.yaml
            name: statefulset-example-templates
            subPath: service
          - mountPath: /root/chart/statefulset-example/templates/NOTES.txt
            name: statefulset-example-templates
            subPath: notes
      volumes:
      - configMap:
          defaultMode: 420
          name: deployment-example
        name: deployment-example
      - configMap:
          defaultMode: 420
          name: deployment-example-templates
        name: deployment-example-templates
      - configMap:
          defaultMode: 420
          name: statefulset-example
        name: statefulset-example
      - configMap:
          defaultMode: 420
          name: statefulset-example-templates
        name: statefulset-example-templates

---

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: controllers.multitenancy.dev
spec:
  group: multitenancy.dev
  names:
    kind: Controller
    listKind: ControllerList
    plural: controllers
    singular: controller
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Controller is the Schema for the controllers API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ControllerSpec defines the desired state of Controller
          properties:
            tenancies:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "operator-sdk generate k8s" to regenerate code after
                modifying this file Add custom validation using kubebuilder tags:
                https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
              items:
                properties:
                  charts:
                    items:
                      properties:
                        chartName:
                          type: string
                        releaseName:
                          type: string
                        settings:
                          items:
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            required:
                            - key
                            - value
                            type: object
                          type: array
                      required:
                      - chartName
                      - settings
                      type: object
                    type: array
                  namespace:
                    type: string
                required:
                - charts
                - namespace
                type: object
              type: array
          required:
          - tenancies
          type: object
        status:
          description: ControllerStatus defines the observed state of Controller
          properties:
            updatedTenancies:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "operator-sdk generate k8s" to regenerate
                code after modifying this file Add custom validation using kubebuilder
                tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
              items:
                properties:
                  chartMessages:
                    items:
                      properties:
                        chartName:
                          type: string
                        errorMessage:
                          type: string
                        settingMap:
                          additionalProperties:
                            type: string
                          type: object
                      required:
                      - chartName
                      - settingMap
                      type: object
                    type: array
                  namespace:
                    type: string
                  podStatus:
                    items:
                      properties:
                        phase:
                          type: string
                        podName:
                          type: string
                      required:
                      - phase
                      - podName
                      type: object
                    type: array
                  replicationControllerStatus:
                    items:
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        ready:
                          type: string
                        replicationControllerName:
                          type: string
                      required:
                      - apiVersion
                      - kind
                      - ready
                      - replicationControllerName
                      type: object
                    type: array
                required:
                - chartMessages
                - namespace
                - podStatus
                - replicationControllerStatus
                type: object
              type: array
          required:
          - updatedTenancies
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: multi-tenancy-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - services/finalizers
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  - namespaces
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resourceNames:
  - multi-tenancy-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - replicasets
  - deployments
  verbs:
  - get
- apiGroups:
  - multitenancy.dev
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: multi-tenancy-operator
subjects:
- kind: ServiceAccount
  name: multi-tenancy-operator
  namespace: multi-tenancy
roleRef:
  kind: ClusterRole
  name: multi-tenancy-operator
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: multi-tenancy-operator

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: deployment-example
data:
  chart: |-
    apiVersion: v1
    description: A Helm chart for Kubernetes of nginx example
    name: nginx-example
    version: dev
  ignore: |-
    # Patterns to ignore when building packages.
    # This supports shell glob matching, relative path matching, and
    # negation (prefixed with !). Only one pattern per line.
    .DS_Store
    # Common VCS dirs
    .git/
    .gitignore
    .bzr/
    .bzrignore
    .hg/
    .hgignore
    .svn/
    # Common backup files
    *.swp
    *.bak
    *.tmp
    *~
    # Various IDEs
    .project
    .idea/
    *.tmproj
  values: |-
    # Default values for Maven projects.
    # This is a YAML-formatted file.
    # Declare variables to be passed into your templates.
    replicaCount: 1
    image:
      repository: nginx
      tag: 1.18.0
      pullPolicy: IfNotPresent

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: deployment-example-templates
data:
  deployment: |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: {{ template "name" . }}
      labels:
        app: {{ default "spring-app" .Values.app }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    spec:
      replicas: {{ .Values.replicaCount }}
      selector:
        matchLabels:
          app: {{ template "name" . }}
      template:
        metadata:
          labels:
            app: {{ template "name" . }}
        spec:
          containers:
          - name: {{ .Chart.Name }}
            image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            ports:
            - containerPort: 80
          terminationGracePeriodSeconds: 60
  helpers: |-
    {{/* vim: set filetype=mustache: */}}
    {{/*
    Expand the name of the chart.
    */}}
    {{- define "name" -}}
    {{- default .Release.Name .Values.nameOverride | trunc 63 | trimSuffix "-" -}}
    {{- end -}}

    {{/*
    Create a default fully qualified app name.
    We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
    */}}
    {{- define "fullname" -}}
    {{- $name := default .Chart.Name .Values.nameOverride -}}
    {{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" -}}
    {{- end -}}
  notes: |-
    Get the application URL by running these commands:

    fullname: {{ template "fullname" . }}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: statefulset-example
data:
  chart: |-
    apiVersion: v1
    description: A Helm chart for Kubernetes of nginx example
    name: nginx-statefulset-example
    version: dev
  ignore: |-
    # Patterns to ignore when building packages.
    # This supports shell glob matching, relative path matching, and
    # negation (prefixed with !). Only one pattern per line.
    .DS_Store
    # Common VCS dirs
    .git/
    .gitignore
    .bzr/
    .bzrignore
    .hg/
    .hgignore
    .svn/
    # Common backup files
    *.swp
    *.bak
    *.tmp
    *~
    # Various IDEs
    .project
    .idea/
    *.tmproj
  values: |-
    replicas: 1
    image:
      repository: nginx
      tag: 1.18.0
      pullPolicy: IfNotPresent
    service:
      internalPort: 80

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: statefulset-example-templates
data:
  statefulset: |-
    apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      name: {{ template "name" . }}
    spec:
      serviceName: "nginx"
      replicas: {{ .Values.replicas }}
      selector:
        matchLabels:
          app: {{ .Chart.Name }}
      template:
        metadata:
          labels:
            app: {{ .Chart.Name }}
        spec:
          containers:
          - name: {{ .Chart.Name }}
            image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
            ports:
            - containerPort: {{ .Values.service.internalPort }}
              name: {{ template "name" . }}
  service: |-
    apiVersion: v1
    kind: Service
    metadata:
      name: {{ .Chart.Name }}
      labels:
        app: {{ .Chart.Name }}
    spec:
      ports:
      - port: {{ .Values.service.internalPort }}
        name: {{ .Chart.Name }}
      clusterIP: None
      selector:
        app: {{ .Chart.Name }}
  helpers: |-
    {{/* vim: set filetype=mustache: */}}
    {{/*
    Expand the name of the chart.
    */}}
    {{- define "name" -}}
    {{- default .Release.Name .Values.nameOverride | trunc 63 | trimSuffix "-" -}}
    {{- end -}}

    {{/*
    Create a default fully qualified app name.
    We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
    */}}
    {{- define "fullname" -}}
    {{- $name := default .Chart.Name .Values.nameOverride -}}
    {{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" -}}
    {{- end -}}
  notes: |-
    Get the application URL by running these commands:

    fullname: {{ template "fullname" . }}
